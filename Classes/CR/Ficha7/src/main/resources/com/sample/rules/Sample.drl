package com.sample.rules
 
import com.sample.Alarme 
import com.sample.Aspersor
import com.sample.Divisao
import com.sample.Fogo

rule "Se há fogo numa divisão, ligar aspersor de água"
salience 50
	when
		$d:Divisao()
		$f:Fogo(divisao==$d)
		$a:Aspersor(divisao==$d, ligado==false)
	then
		$a.setLigado(true);
		update($a);
		System.out.println("Aspersor ligado "+$d.getNome());
		retract($f);
		System.out.println("Fogo apagado na divisao "+$d.getNome());
end


rule "Fogo apagado numa divisão, desligar aspersor"
salience 40
	when
		$d:Divisao()
		$a:Aspersor(divisao==$d, ligado==true)
		not Fogo()
	then
		$a.setLigado(false);
		update($a);
		System.out.println("Aspersor desligado "+$d.getNome());
end

rule "Liga alarme se há fogos"
salience 100
	when
		exists Fogo()
	then
		insertLogical(new Alarme());
		//insert(new Alarme());
		System.out.println("Alarme ligado");
end

rule "Desliga alarme se não há fogos"
salience 10
	when
		not Fogo()
		$a:Alarme()
	then
		//retract($a);
		System.out.println("Alarme desligado");
end

rule "Tudo OK"
salience 1
	when
		not Alarme()
		not Aspersor(ligado==true)
	then
		System.out.println("Tudo OK");
end